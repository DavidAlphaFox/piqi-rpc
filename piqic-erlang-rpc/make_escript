#!/usr/bin/env escript
%%! -noshell -noinput


main([Escript | Beams]) when Beams =/= [] ->
    Archive = [ {filename:basename(X), read_file(X)} || X <- Beams ],
    Mod = filename:basename(last(Beams), ".beam"),
    io:format("creating escript \"~s\" with body ~p~n", [Escript, Beams]),
    ok = escript:create(Escript, [ 
            shebang, comment,
            {emu_args, "-noshell -noinput -escript main " ++ Mod},
            {archive, Archive, []}
    ]);

main(_) ->
    io:format("usage: make_escript <file.beam>"),
    erlang:halt(1).


read_file(Name) ->
    {ok, Bin} = file:read_file(Name),
    Bin.


last([H]) -> H;
last([_|T]) -> last(T).


% vim: ft=erlang
